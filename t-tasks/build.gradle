apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply from: "../dependencies.gradle"
//apply plugin: 'com.getkeepsafe.dexcount'
//apply from: '../config/quality/quality.gradle'

repositories {
    maven { url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo' }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'
    defaultConfig {
        applicationId "com.teo.ttasks"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName '0.1'
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file('keystore/release.jks')
            keyAlias 'teo baranga'
            keyPassword "$System.env.TT_KEY"
            storePassword "$System.env.TT_KEY"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "env"
    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            resValue "string", "app_name", "T-Tasks Dev"
            dimension "env"
        }
        prod {
            resValue "string", "app_name", "T-Tasks"
            dimension "env"
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'mips'
            universalApk false
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        warningsAsErrors true
        abortOnError true // Fail early.

        disable 'GoogleAppIndexingWarning' // App does not have deep linking.
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    // This allows us see tests execution progress in the output on the CI.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }
    dexOptions {
        jumboMode = true
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test"))
        {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

dependencies {
    kapt 'com.android.databinding:compiler:3.0.1'

    implementation 'eu.davidea:flexible-adapter:5.0.0-rc3'
    implementation 'eu.davidea:flexible-adapter-databinding:1.0.0-b2'

    implementation 'com.android.support:multidex:1.0.2'

    implementation deps.kotlin.stdlib

    implementation libraries.dagger
    kapt libraries.daggerCompiler
    kapt libraries.daggerAndroidProcessor
    implementation libraries.daggerAndroidSupport
    implementation deps.rx.java
    implementation libraries.rxAndroid
    implementation deps.support.cardview
    implementation deps.support.design
    implementation deps.support.fragment
    implementation libraries.timber
    implementation libraries.playServicesAuth
    implementation libraries.playServicesGcm
    implementation 'com.androidhuman.rxfirebase2:firebase-auth-kotlin:11.6.0.1'
    implementation 'com.androidhuman.rxfirebase2:firebase-database-kotlin:11.6.0.1'
    implementation libraries.retrofit
    implementation libraries.retrofitGson
    implementation libraries.retrofitRxJavaAdapter
    implementation deps.okhttp.logging_interceptor
    implementation deps.firebase.auth
    implementation deps.firebase.database
    implementation 'com.birbit:android-priority-jobqueue:2.0.1'
    implementation(deps.aboutlibraries) { transitive = true }
    implementation 'com.mikepenz:fastadapter:3.0.4@aar'
    implementation 'com.mikepenz:fastadapter-commons:3.0.3@aar'
    implementation 'com.mikepenz:fastadapter-extensions-expandable:3.0.3@aar'
    implementation(deps.materialdrawer) { transitive = true }
    implementation 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.artemzin.rxjava:proguard-rules:1.3.3.0'
    implementation 'com.github.strooooke:appbarsyncedfab:v0.4'
    implementation(deps.crashlytics) { transitive = true }
    kapt 'dk.ilios:realmfieldnameshelper:1.1.1'
    compileOnly 'javax.annotation:jsr250-api:1.0'

    debugImplementation libraries.stetho
    debugImplementation 'com.uphyca:stetho_realm:2.1.0'

    // Dependencies for local unit tests
    testImplementation libraries.junit
    testImplementation "org.mockito:mockito-all:${mockitoVersion}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testImplementation "org.powermock:powermock-module-junit4:${powerMockito}"
    testImplementation "org.powermock:powermock-api-mockito:${powerMockito}"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"

    androidTestImplementation deps.support.recyclerview

    // Android Testing Support Library's runner and rules
    androidTestImplementation libraries.supportTestRunner
    androidTestImplementation libraries.supportTestRules
    // Espresso UI Testing dependencies.
    androidTestImplementation(deps.espresso.core, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation(deps.espresso.contrib, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

// This needs to be at the bottom so that no dependency collisions are introduced
apply plugin: 'com.google.gms.google-services'
