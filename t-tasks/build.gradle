apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        applicationId "com.teo.ttasks"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName '0.1'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        // Enabling multidex support.
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 15
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:${android_support_lib_version}"
    compile "com.android.support:cardview-v7:${android_support_lib_version}"
    compile "com.android.support:design:${android_support_lib_version}"
    compile "com.android.support:recyclerview-v7:${android_support_lib_version}"
    compile "com.android.support:support-v4:${android_support_lib_version}"
    compile('com.google.api-client:google-api-client-android:1.21.0') { exclude group: 'org.apache.httpcomponents' }
    compile('com.google.apis:google-api-services-tasks:v1-rev43-1.21.0') { exclude group: 'org.apache.httpcomponents' }
    compile('com.mikepenz:aboutlibraries:5.5.1@aar') { transitive = true }
    compile('com.mikepenz:materialdrawer:4.6.4@aar') { transitive = true }

    apt 'com.google.dagger:dagger-compiler:2.0.2'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.android.gms:play-services-plus:8.4.0'
    compile 'com.google.android.gms:play-services-auth:8.4.0'
    compile 'com.google.auto.value:auto-value:1.1'
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'com.greysonparrelli.permiso:permiso:0.1.3'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'com.mikepenz:google-material-typeface:2.2.0.1@aar'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.1'
    compile 'javax.inject:javax.inject:1'
    compile 'org.jetbrains:annotations:13.0'

    // Dependencies for local unit tests
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-all:${mockitoVersion}"
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testCompile "org.powermock:powermock-module-junit4:${powerMockito}"
    testCompile "org.powermock:powermock-api-mockito:${powerMockito}"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:${runnerVersion}"
    androidTestCompile "com.android.support.test:rules:${runnerVersion}"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${android_support_lib_version}"
    resolutionStrategy.force "com.google.code.findbugs:jsr305:2.0.1"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

// This needs to be at the bottom, so weird...
apply plugin: 'com.google.gms.google-services'
